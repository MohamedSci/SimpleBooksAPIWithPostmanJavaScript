{
	"info": {
		"_postman_id": "97a57f6b-59bc-4e35-9044-47e129c6199d",
		"name": "SimpleBooksAPIWithPostmanJavaScript",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24993660"
	},
	"item": [
		{
			"name": "API_Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"pm.test(\"Assign Token to Variable\",function(){\r",
							"    var responseData = pm.response.json();\r",
							"    var accessToken = responseData.accessToken; \r",
							"    console.log(\"Access Token ***********---------- \"+accessToken);\r",
							"    pm.environment.set(\"auth\",accessToken);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Generate Random Client Name and Email\",()=>{\r",
							"// Generate a random email using the current timestamp\r",
							"const randomNum = Math.floor(Math.random() * 100000);\r",
							"const randomName= 'testuser_'+randomNum;\r",
							"const randomEmail = randomName+'@example.com';\r",
							"\r",
							"// Assign the generated Name to an environment variable\r",
							"pm.collectionVariables.set(\"clientName\", randomName);\r",
							"// Assign the generated email to an environment variable\r",
							"pm.collectionVariables.set(\"clientEmail\", randomEmail);\r",
							"\r",
							"// Log the Name and Email for visibility\r",
							"console.log(\"Generated Name: \" + randomName);\r",
							"console.log(\"Generated Email: \" + randomEmail);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n   \"clientName\": \"{{clientName}}\",\r\n   \"clientEmail\": \"{{clientEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api-clients",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "getStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate The Response Message\",function(){\r",
							"var responseJson = pm.response.json();\r",
							"pm.collectionVariables.set(\"statusMessage\",responseJson.status);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/status",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "getListOfBooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Assign the first book data to variables\",function(){\r",
							"   var responseJson = pm.response.json();\r",
							"    var bID = responseJson[0].id;\r",
							"    var bName = responseJson[0].name;\r",
							"    var bType = responseJson[0].type;\r",
							"    var bAvailable = responseJson[0].available;\r",
							"pm.collectionVariables.set(\"bookID\", bID);\r",
							"pm.collectionVariables.set(\"bookName\", bName);\r",
							"pm.collectionVariables.set(\"bookType\", bType);\r",
							"pm.collectionVariables.set(\"bookAvailable\", bAvailable);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/books?type={{bookType}}&limit={{bookLimit}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "{{bookType}}"
						},
						{
							"key": "limit",
							"value": "{{bookLimit}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getASingleBook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate that the response has valid data\",function(){\r",
							"pm.expect(responseJson.id).to.equal(pm.collectionVariables.get(\"bookID\"));\r",
							"pm.expect(responseJson.name).to.equal(pm.collectionVariables.get(\"bookName\"));\r",
							"pm.expect(responseJson.type).to.equal(pm.collectionVariables.get(\"bookType\"));\r",
							"pm.expect(responseJson.available).to.equal(pm.collectionVariables.get(\"bookAvailable\"));\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/books/{{bookID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"books",
						"{{bookID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "SubmitAnOrder",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var bID = pm.collectionVariables.get(\"bookID\");\r",
							"console.log(\"Submit An Order precondition --- get collection variables \"+bID);\r",
							"var bID = parseInt(bID)+1;\r",
							"\r",
							"if(bID <= 12){\r",
							"var bID = JSON.stringify(bID);\r",
							"console.log(\"Submit An Order precondition ---*** Modifcation of bID and bName\"+ JSON.stringify(bID));\r",
							"pm.collectionVariables.set(\"bookID\",bID);\r",
							"pm.collectionVariables.set(\"bookName\",\"\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"assign Order Id to variable\",function(){\r",
							"        var responseJSON = pm.response.json();\r",
							"   pm.collectionVariables.set(\"orderId\",responseJSON.orderId);     \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": \"{{bookID}}\",\r\n  \"customerName\": \"{{bookName}} {{bookID}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/orders",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateAnOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"customerName\": \"John {{orderId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/orders/{{orderId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllOrders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check if Submitted Order in The Get All Orders response\",()=>{\r",
							"var responseJSON = pm.response.json();\r",
							"var idsList = [];\r",
							"var orderID =pm.collectionVariables.get(\"orderId\");\r",
							"for(var i=0; i < responseJSON.length; i++){\r",
							"idsList.push(responseJSON[i].id);\r",
							"}\r",
							"console.log(\"idsList *** \"+ idsList);\r",
							"console.log(idsList);\r",
							"pm.expect(idsList).to.include(orderID);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/orders",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAnOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Check the Order is Submitted with thr right Book\",()=>{\r",
							"pm.expect(JSON.stringify(responseJson.bookId)).to.equal(\r",
							"    pm.collectionVariables.get(\"bookID\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/orders/{{orderId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteAnOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/orders/{{orderId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://simple-books-api.glitch.me",
			"type": "string"
		},
		{
			"key": "auth",
			"value": "783604b42307bc5656db297fc2542f7856544e01fbac979e0d979f679e2b7c1e",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "BRQguSC6EqCYeyJVstdfG",
			"type": "string"
		},
		{
			"key": "bookID",
			"value": 2
		},
		{
			"key": "bookName",
			"value": "Just as I Am"
		},
		{
			"key": "bookType",
			"value": "non-fiction"
		},
		{
			"key": "bookAvailable",
			"value": false
		},
		{
			"key": "statusMessage",
			"value": "OK"
		},
		{
			"key": "clientName",
			"value": "testuser_37284"
		},
		{
			"key": "clientEmail",
			"value": "testuser_37284@example.com",
			"type": "string"
		},
		{
			"key": "bookLimit",
			"value": "1",
			"type": "string"
		}
	]
}